{"version":3,"sources":["store/todos.js","App.js","burger/Counter.js","Test/store/usersStore.js","Test/store/themeStore.js","Test/theme.js","Test/styles.js","Test/Test.js","mui/Mui.js","header/hdata.js","header/headerStyle.js","header/store.js","header/theme.js","header/form/CustomButton.js","header/form/ErrorWrapper.js","header/form/TextField.js","header/form/yup.js","header/form/Froms.js","header/Header.js","header/wrapper.js","Demo/Card.js","Demo/Theme.js","Demo/Form.js","Immer/imerTheme.js","Immer/headerStyels.js","index.js"],"names":["todos","id","nanoid","task","completed","makeAutoObservable","this","message","push","filter","item","console","log","length","observer","input","useRef","uncompleted","TodoInstance","reduce","prev","todo","style","width","ref","type","onClick","add","current","value","map","t","onChange","Button","remove","variant","color","users","makeObservable","observable","addUser","action","fetchUsers","payload","fetch","then","response","json","user","name","isDark","darkToggle","theme","createMuiTheme","palette","primary","light","main","dark","contrastText","secondary","useStyle","makeStyles","container","backgroundColor","props","fontSize","usersClass","styles","useStyles","autorun","ThemeProvider","className","themeStore","root","flexGrow","paper","padding","spacing","textAlign","text","margin","maxWidth","border","header","success","display","justifyContent","headersData","label","href","useHeaderStyle","other","box","paddingTop","minHeight","info","mobile","isMobile","setToMobile","setToDesktop","setDark","counter","count","setCount","lightTheme","darkTheme","green","button","CustomButton","ErrorWrapper","children","TextFieldCustom","TextField","validationSchema","yup","required","test","email","password","facebook","twitter","Forms","initialValues","social","phNumbers","component","autoFocus","placeholder","as","form","setTouched","validateForm","displayMobile","openHandler","IconButton","edge","size","Typography","Header","useState","setIsOpen","useEffect","checkIfMobile","window","innerWidth","addEventListener","AppBar","position","Toolbar","disableRipple","Link","to","Box","noWrap","fullWidth","Switch","checked","inputProps","Wrapper","top","left","media","height","expand","transform","marginLeft","transition","transitions","create","duration","shortest","expandOpen","avatar","red","maxwidth","textDecoration","MuiButton","disableElevation","headerItem","flexCont","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a0c64cae.chunk.js","sourcesContent":["import { makeAutoObservable } from \"mobx\";\r\nimport { nanoid } from \"nanoid\";\r\n\r\nclass Todo {\r\n    todos = [{\r\n        id: nanoid(),\r\n        task: \"make breakfast\",\r\n        completed: false\r\n    },\r\n    {\r\n        id: nanoid(),\r\n        task: \"sleep\",\r\n        completed: false\r\n    }]\r\n    constructor() {\r\n        makeAutoObservable(this)\r\n    }\r\n    add(message) {\r\n        this.todos.push({\r\n            id: nanoid(),\r\n            task: message,\r\n            completed: false\r\n        })\r\n    }\r\n    remove(id) {\r\n        this.todos = this.todos.filter(item => {\r\n            console.log(id, item.id)\r\n            return item.id !== id\r\n        })\r\n        console.log(this.todos.length)\r\n    }\r\n    completed(id) {\r\n        for (let item of this.todos) {\r\n            if (item.id == id) {\r\n                item.completed = !item.completed\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport default new Todo()","import { observer } from 'mobx-react-lite'\nimport React, { useRef } from 'react'\nimport TodoInstance from './store/todos'\nimport { Button } from '@material-ui/core'\nimport { autorun } from 'mobx'\n\nconst App = observer(() => {\n  const input = useRef(null)\n  const uncompleted = TodoInstance.todos.reduce((prev, todo) => {\n\n    if (todo.completed) {\n      return prev\n    } else {\n      return ++prev\n    }\n  }, 0)\n  // autorun(() => {\n    console.log(TodoInstance.todos)\n  // })\n  return (\n    <div style={{ width: \"300px\" }}>\n      <div>\n        <input ref={input} type=\"text\" />\n        <button onClick={() => TodoInstance.add(input.current.value)}>добавить</button>\n      </div>\n      {TodoInstance.todos.map(t => <div key={t.id}>\n        <span>{t.task}</span>\n        <input onChange={() => TodoInstance.completed(t.id)} type=\"checkbox\" />\n        <Button\n          onClick={() => TodoInstance.remove(t.id)}\n          variant=\"contained\"\n          color=\"green\"\n        >удалить</Button>\n      </div>)}\n      <div>{`Осталось выполнить ${uncompleted} дел`}</div>\n    </div>\n  )\n})\n\nexport default App\n","import { autorun, when } from \"mobx\"\r\nimport { Observer } from \"mobx-react\"\r\nimport CounterStore from \"./stores/counterStore\"\r\n\r\nconst Counter = (({ initialState }) => {\r\n    const counter = CounterStore(initialState)\r\n\r\n    autorun(() => {\r\n        console.log(\"значение счетчика: \", counter.count)\r\n    })\r\n    when(() => counter.count > 5, () => console.log(\"more than 5\"))//вызывается только один раз\r\n    return (\r\n        <>\r\n            <button onClick={counter.inc}>+++++++++</button>\r\n            <Observer>\r\n                {() => <h1>{counter.count}</h1>}\r\n            </Observer>\r\n            <button onClick={counter.dec}>------</button>\r\n        </>\r\n    )\r\n})\r\n\r\nexport default Counter\r\n","import { action, makeObservable, observable } from \"mobx\";\r\n\r\nclass Users {\r\n    users = [\"maxim\", \"anton\", \"ivan\"]\r\n    constructor() {\r\n        makeObservable(this, {\r\n            users: observable,\r\n            addUser: action,\r\n            fetchUsers: action\r\n        })\r\n    }\r\n    addUser(payload) {\r\n        this.users.push(payload)\r\n    }\r\n    fetchUsers() {\r\n        fetch('https://jsonplaceholder.typicode.com/users')\r\n            .then(response => response.json())\r\n            .then(json => {\r\n                json.map(user => {\r\n                    this.users.push(user.name)\r\n                })\r\n            })\r\n    }\r\n}\r\n\r\nexport default new Users()","import { action, makeObservable, observable } from \"mobx\";\r\n\r\nclass Theme {\r\n    isDark = false\r\n    constructor() {\r\n        makeObservable(this, {\r\n            isDark: observable,\r\n            darkToggle: action\r\n        })\r\n    }\r\n    darkToggle() {\r\n        this.isDark = !this.isDark\r\n    }\r\n}\r\n\r\nexport default new Theme()","import { createMuiTheme } from \"@material-ui/core\";\r\n\r\nconst theme = createMuiTheme({\r\n    palette: {\r\n        primary: {\r\n            light: '#fff',\r\n            main: '#a6269a',\r\n            dark: '#a6269a',\r\n            contrastText: '#fff',\r\n        },\r\n        secondary: {\r\n            light: '#ff7961',\r\n            main: '#f44336',\r\n            dark: '#ba000d',\r\n            contrastText: '#000',\r\n        },\r\n    },\r\n});\r\n\r\n\r\nexport default theme","import { makeStyles } from \"@material-ui/core\";\r\n\r\nconst useStyle = makeStyles({\r\n    container: {\r\n        backgroundColor: (props) => props.color,\r\n        fontSize: \"50px\"\r\n    }\r\n})\r\n\r\nexport default useStyle","import { autorun } from 'mobx'\r\nimport { observer } from 'mobx-react-lite'\r\nimport React, { useRef } from 'react'\r\nimport usersClass from './store/usersStore'\r\nimport themeStore from './store/themeStore'\r\nimport { Button, createMuiTheme, ThemeProvider } from '@material-ui/core'\r\nimport theme from './theme'\r\nimport useStyles from './styles'\r\n\r\n\r\nconst Test = observer((props) => {\r\n\r\n    const input = useRef(null)\r\n    const { users } = usersClass\r\n    function addHandler() {\r\n        usersClass.addUser(input.current.value)\r\n    }\r\n    function fetchHandler() {\r\n        usersClass.fetchUsers()\r\n    }\r\n    function changeTheme() {\r\n        themeStore.darkToggle()\r\n    }\r\n\r\n\r\n    const styles = useStyles(props)\r\n    autorun(() => console.log(users))\r\n    return (\r\n        <ThemeProvider theme={theme}>\r\n            <div className={styles.container}>\r\n                <input ref={input} type=\"text\" />\r\n                <Button color=\"primary\" variant=\"contained\" onClick={addHandler}>добавить</Button>\r\n                <button onClick={fetchHandler}>fetch</button>\r\n                <button onClick={changeTheme}>поменять тему</button>\r\n                <div className=\"users\">\r\n                    {users.map(user => (<div>{user}</div>))}\r\n                </div>\r\n            </div>\r\n        </ThemeProvider>\r\n\r\n    )\r\n})\r\n\r\nexport default Test\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport data from './data';\r\nimport { AppBar, Button, Container, Toolbar, Typography } from '@material-ui/core';\r\nimport { headersData } from './hd';\r\nimport { Link } from \"react-router-dom\"\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        flexGrow: 1,\r\n    },\r\n    paper: {\r\n        padding: theme.spacing(2),\r\n        textAlign: 'center',\r\n        color: theme.palette.text.secondary,\r\n    },\r\n    container: {\r\n        margin: \"0 auto\",\r\n        maxWidth: \"1200px\",\r\n        border: \"2px solid red\"\r\n    },\r\n    header: {\r\n        backgroundColor: theme.palette.success.main,\r\n        color: \"blue\",\r\n        display: \"flex\",\r\n        justifyContent: \"space-between\"\r\n    }\r\n}));\r\n\r\nconst getMenuButtons = () => {\r\n    return headersData.map(({ label, href }) => {\r\n        return (\r\n            <Button\r\n                {...{\r\n                    key: label,\r\n                    color: \"inherit\",\r\n                    to: href,\r\n                    component: Link,\r\n                }}\r\n            >\r\n                {label}\r\n            </Button>\r\n        );\r\n    });\r\n};\r\n\r\nexport default function FullWidthGrid() {\r\n    const styles = useStyles()\r\n    return (\r\n\r\n        <>\r\n            <AppBar position=\"static\">\r\n                <Toolbar className={styles.header}>\r\n                    <Typography variant=\"h6\">\r\n                        hello world\r\n                    </Typography>\r\n                    <div>\r\n                        {getMenuButtons()}\r\n\r\n                    </div>\r\n                </Toolbar>\r\n            </AppBar>\r\n            <Grid style={{\r\n                margin: 0,\r\n                width: '100%',\r\n            }} spacing={2} className={styles.container} justify=\"center\" container>\r\n                {data.map(item => {\r\n                    return <Grid sm={6} xs={12} md={3} item ><Paper className={styles.paper}>{item}</Paper></Grid>\r\n                })}\r\n            </Grid>\r\n        </>\r\n\r\n\r\n    );\r\n}\r\n","export const headersData = [\r\n    {\r\n        label: \"Listings\",\r\n        href: \"/listings\",\r\n    },\r\n    {\r\n        label: \"Mentors\",\r\n        href: \"/mentors\",\r\n    },\r\n    {\r\n        label: \"My Account\",\r\n        href: \"/account\",\r\n    },\r\n    {\r\n        label: \"Log Out\",\r\n        href: \"/logout\",\r\n    },\r\n];","import { makeStyles } from \"@material-ui/core\";\r\n\r\nconst useHeaderStyle = makeStyles(theme => ({\r\n    header: {\r\n        display: \"flex\",\r\n        justifyContent: \"space-between\",\r\n        backgroundColor: theme.palette.primary.main\r\n    },\r\n    other: {\r\n    },\r\n    box: {\r\n        paddingTop: \"110px\",\r\n        minHeight: \"100vh\",\r\n        backgroundColor: theme.palette.info.main\r\n    }\r\n}))\r\n\r\nexport default useHeaderStyle","import { action, makeObservable, observable } from \"mobx\"\r\n\r\nclass Mobile {\r\n    isMobile = false\r\n    constructor() {\r\n        makeObservable(this, {\r\n            isMobile: observable,\r\n            setToMobile: action,\r\n            setToDesktop: action\r\n        })\r\n    }\r\n    setToMobile = () => {\r\n        this.isMobile = true\r\n    }\r\n    setToDesktop = () => {\r\n        this.isMobile = false\r\n    }\r\n}\r\nclass Dark {\r\n    isDark = false\r\n    constructor() {\r\n        makeObservable(this, {\r\n            isDark: observable,\r\n            setDark: action\r\n        })\r\n    }\r\n    setDark = () => {\r\n        this.isDark = !this.isDark\r\n    }\r\n}\r\n\r\nclass Counter {\r\n    count = 0\r\n    constructor() {\r\n        makeObservable(this, {\r\n            count: observable,\r\n            setCount: action\r\n        })\r\n    }\r\n    setCount = () => {\r\n        ++this.count\r\n    }\r\n\r\n}\r\nconst mobile = new Mobile()\r\nconst dark = new Dark()\r\nconst counter = new Counter()\r\nexport { mobile, dark, counter }\r\n\r\n\r\n","import { createMuiTheme } from \"@material-ui/core\";\r\n\r\nconst lightTheme = createMuiTheme({\r\n    palette: {\r\n        primary: {\r\n            main: \"rgb(255,0,0)\"\r\n            // \"#32a4a8\"\r\n        },\r\n        secondary: {\r\n            main: \"#63d2d6\"\r\n        },\r\n        info: {\r\n            main: \"rgb(0,255,0)\"\r\n        }\r\n    }\r\n})\r\n\r\nconst darkTheme = createMuiTheme({\r\n    palette: {\r\n        primary: {\r\n            main: \"rgb(0,0,255)\"\r\n        },\r\n        secondary: {\r\n            main: \"#6f7573\"\r\n        },\r\n        info: {\r\n            main: \"#ccc\"\r\n        }\r\n    }\r\n})\r\n\r\nexport { darkTheme, lightTheme }","import {\r\n  Button,\r\n  createMuiTheme,\r\n  makeStyles,\r\n  MuiThemeProvider,\r\n} from \"@material-ui/core\";\r\nimport { green, purple } from \"@material-ui/core/colors\";\r\nimport React from \"react\";\r\nexport const customTheme = createMuiTheme((theme) => ({\r\n  palette: {\r\n    primary: {\r\n      light: \"#aaa\",\r\n      main: \"#ccc\",\r\n      dark: \"#ddd\",\r\n    },\r\n    secondary: {\r\n      main: green[500],\r\n    },\r\n  },\r\n}));\r\nconst useStyles = makeStyles((theme) => ({\r\n  button: {\r\n    backgroundColor: theme.palette.primary.main,\r\n  },\r\n}))\r\nconst CustomButton = () => {\r\n    const styles= useStyles()\r\n  return (\r\n      <Button className={styles.button} variant=\"contained\" color=\"primary\">\r\n        Отправить\r\n      </Button>\r\n  );\r\n};\r\n\r\nexport default CustomButton;\r\n","import React from 'react'\r\n\r\nconst ErrorWrapper = (props) => {\r\n    return (\r\n        <div className=\"error\">\r\n            {props.children}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ErrorWrapper\r\n","import { TextField } from \"@material-ui/core\";\r\nimport React from \"react\";\r\n\r\nconst TextFieldCustom = ({ label }) => {\r\n  return (\r\n    <>\r\n      <TextField label={label} name={label} />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default TextFieldCustom;\r\n","import * as yup from 'yup'\r\nconst validationSchema = yup.object({\r\n  name: yup\r\n    .string()\r\n    .required(\"this fieldd is required!!!\")\r\n    .test(\"len\", \"must be at least 3 symbols\", (value) =>\r\n      value ? value.length >= 3 : false\r\n    ),\r\n  email: yup\r\n    .string()\r\n    .email(\"innvalid email\")\r\n    .required(\"this fieldd is required!!!\"),\r\n  password: yup.string().required(\"this fieldd is required!!!\"),\r\n  // .test(\"valid\", \"incorrect password!\", (value) => /^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/.test(value))\r\n  facebook: yup\r\n    .string()\r\n    .required(\"this fieldd is required!!!\")\r\n    .test(\"len\", \"must be at least 3 symbols\", (value) =>\r\n      value ? value.length >= 3 : false\r\n    ),\r\n  twitter: yup\r\n    .string()\r\n    .required(\"this fieldd is required!!!\")\r\n    .test(\"len\", \"must be at least 3 symbols\", (value) =>\r\n      value ? value.length >= 3 : false\r\n    ),\r\n});\r\nexport default validationSchema;\r\n","import { Button, makeStyles } from \"@material-ui/core\";\r\nimport { ErrorSharp } from \"@material-ui/icons\";\r\nimport {\r\n  useFormik,\r\n  Formik,\r\n  Form,\r\n  Field,\r\n  ErrorMessage,\r\n  FieldArray,\r\n  FastField,\r\n} from \"formik\";\r\nimport { TextField } from \"formik-material-ui\";\r\nimport React from \"react\";\r\nimport * as yup from \"yup\";\r\nimport CustomButton from \"./CustomButton\";\r\nimport ErrorWrapper from \"./ErrorWrapper\";\r\nimport TextFieldCustom from \"./TextField\";\r\nimport validationSchema from \"./yup\";\r\n\r\nconst useStyles = makeStyles({\r\n  input: {\r\n    fontSize: \"32px\",\r\n  },\r\n});\r\nconst Forms = () => {\r\n  const styles = useStyles();\r\n  const initialValues = {\r\n    name: \"\",\r\n    email: \"\",\r\n    password: \"\",\r\n    social: {\r\n      facebook: \"\",\r\n      twitter: \"\",\r\n    },\r\n    phNumbers: [\"\"],\r\n  };\r\n  //   const onSubmit = (values) => {\r\n  //     //автоматический event.preventDefault()\r\n  //     console.log(\"values\", values);\r\n  //     console.log('submit!!!!')\r\n  //   };\r\n  return (\r\n    <>\r\n      <Formik {...{ validationSchema, initialValues }}>\r\n        {(props) => {\r\n          return (\r\n            <Form id=\"test\">\r\n              <div>\r\n                {/* {field не нужно указывать onBlur...или getFieldProps} */}\r\n                <Field\r\n                  component={TextField}\r\n                  autoFocus\r\n                  type=\"text\"\r\n                  label=\"name\"\r\n                  name=\"name\"\r\n                />\r\n                {/* <div>{formik.errors.name && formik.touched.name ? formik.errors.name : null}</div> */}\r\n                {/* <ErrorMessage name=\"name\" component={ErrorWrapper} /> */}\r\n              </div>\r\n              <div>\r\n                <FastField type=\"text\" name=\"email\" placeholder=\"email\" />\r\n                {/* <div>{formik.errors.email && formik.touched.email ? formik.errors.email : null}</div> */}\r\n                <ErrorMessage name=\"email\" component={ErrorWrapper} />\r\n              </div>\r\n              <div>\r\n                <Field\r\n                  component={TextField}\r\n                  name=\"password\"\r\n                  placeholder=\"password\"\r\n                />\r\n                {/* <div>{formik.errors.password && formik.touched.password ? formik.errors.password : null}</div> */}\r\n                <ErrorMessage name=\"password\" component={ErrorWrapper} />\r\n              </div>\r\n              <div>\r\n                <Field\r\n                  as=\"textarea\"\r\n                  type=\"text\"\r\n                  name=\"social.facebook\"\r\n                  placeholder=\"fb\"\r\n                />\r\n                {/* <div>{formik.errors.password && formik.touched.password ? formik.errors.password : null}</div> */}\r\n                <ErrorMessage name=\"social.facebook\" component={ErrorWrapper} />\r\n              </div>\r\n              <div>\r\n                <Field\r\n                  as=\"textarea\"\r\n                  type=\"text\"\r\n                  name=\"social.twitter\"\r\n                  placeholder=\"tw\"\r\n                />\r\n                {/* <div>{formik.errors.password && formik.touched.password ? formik.errors.password : null}</div> */}\r\n                <ErrorMessage name=\"social.twitter\" component={ErrorWrapper} />\r\n              </div>\r\n              {/* <div>\r\n              <FieldArray name=\"phNumbers\">\r\n                {(props) => {\r\n                  const { form, remove, push } = props;\r\n                  const { phNumbers } = form.values;\r\n                  return phNumbers.map((item, index) => (\r\n                    <div key={index}>\r\n                      <Field name={`phNumbers[${index}]`} />\r\n                      <button onClick={() => push(\"\")}>+</button>\r\n                      {phNumbers.length > 0 && (\r\n                        <button onClick={() => remove(index)}>-</button>\r\n                      )}\r\n                    </div>\r\n                  ));\r\n                }}\r\n              </FieldArray>\r\n              <ErrorMessage name=\"phNumbers\" component={ErrorWrapper} />\r\n            </div> */}\r\n              <Button type=\"submit\" form=\"test\">\r\n                {\" \"}\r\n                отправить\r\n              </Button>\r\n              <button\r\n                onClick={() => {\r\n                  props.setTouched();\r\n                  props.validateForm();\r\n                }}\r\n              >\r\n                validation\r\n              </button>\r\n            </Form>\r\n          );\r\n        }}\r\n      </Formik>\r\n      <TextFieldCustom />\r\n      <CustomButton/>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Forms;\r\n","import { AppBar, Box, Button, FormControlLabel, IconButton, Toolbar, Typography, Switch, ThemeProvider } from '@material-ui/core'\r\nimport React, { useEffect, useState } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { headersData } from './hdata'\r\nimport useHeaderStyle from './headerStyle'\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport { counter, dark, mobile } from './store'\r\nimport { observable, when } from 'mobx'\r\nimport { observer } from 'mobx-react-lite'\r\nimport theme from '../Test/theme'\r\nimport { darkTheme, lightTheme } from './theme'\r\nimport Forms from './form/Froms'\r\nfunction displayDesktop() {\r\n    return (<>\r\n        <Typography >\r\n            Welcome\r\n        </Typography>\r\n        <div>\r\n            {headersData.map(({ label, href }) => {\r\n                return (<Button disableRipple={true} color=\"inherit\" component={Link} to={href}>\r\n                    {label}\r\n                </Button>)\r\n            })}\r\n        </div>\r\n    </>)\r\n}\r\nfunction displayMobile(openHandler) {\r\n    return (<>\r\n        <div>\r\n            <IconButton\r\n                {...{\r\n                    edge: \"start\",\r\n                    color: \"inherit\",\r\n                    \"aria-label\": \"menu\",\r\n                    \"aria-haspopup\": \"true\",\r\n                    size: \"medium\",\r\n                    onClick: openHandler\r\n                }}\r\n            >\r\n                <MenuIcon />\r\n            </IconButton>\r\n        </div>\r\n        <Typography >\r\n            Welcome\r\n        </Typography>\r\n\r\n    </>)\r\n}\r\nconst Header = observer(() => {\r\n    const { header, other, box } = useHeaderStyle()\r\n    const [isOpen, setIsOpen] = useState(false)\r\n    function openHandler() {\r\n        setIsOpen(prev => !prev)\r\n    }\r\n    useEffect(() => {\r\n        const checkIfMobile = () => {\r\n            if (window.innerWidth < 700) {\r\n                mobile.setToMobile()\r\n            } else {\r\n                mobile.setToDesktop()\r\n\r\n            }\r\n        }\r\n        window.addEventListener(\"resize\", checkIfMobile)\r\n        checkIfMobile()\r\n    }, [])\r\n    return (\r\n        <>\r\n            <AppBar position=\"fixed\" color=\"primary\">\r\n                <Toolbar className={`${other}  ${header}`}>\r\n                    {mobile.isMobile ? displayMobile(openHandler) : displayDesktop()}\r\n                </Toolbar>\r\n            </AppBar>\r\n            <Box className={box} color=\"primary\" component=\"div\" display=\"block\">\r\n                <div>{dark.isDark ? \"dark\" : \"light\"}</div>\r\n                <Typography noWrap variant=\"h1\" component=\"h6\">\r\n                    Lorem ipsum dolor sit amet consectetur\r\n                </Typography>\r\n                <Button color=\"secondary\" variant=\"contained\" fullWidth>hello vsem</Button>\r\n                <Switch\r\n                    checked={dark.isDark}\r\n                    onChange={dark.setDark}\r\n                    value=\"active\"\r\n                    inputProps={{ 'aria-label': 'secondary checkbox' }}\r\n                />\r\n                <Button onClick={counter.setCount}>+1</Button>\r\n                <Forms />\r\n            </Box>\r\n\r\n\r\n        </>\r\n    )\r\n})\r\n\r\nexport default Header\r\n","import { dark } from \"./store\";\r\nimport { ThemeProvider } from \"@material-ui/styles\";\r\nimport { observer } from \"mobx-react-lite\";\r\nimport React from \"react\";\r\nimport theme from \"../Test/theme\";\r\nimport Header from \"./Header\";\r\nimport { counter } from \"./store\";\r\nimport { darkTheme, lightTheme } from \"./theme\";\r\n\r\nconst Wrapper = observer(() => {\r\n  console.log(\"wrapper\", dark.isDark);\r\n  return (\r\n    <>\r\n      <ThemeProvider theme={dark.isDark ? darkTheme : lightTheme}>\r\n        <div\r\n          style={{\r\n            color: \"red\",\r\n            position: \"absolute\",\r\n            top: \"50%\",\r\n            left: \"50%\",\r\n          }}\r\n        >\r\n          {counter.count}\r\n        </div>\r\n        {/* <ThemeProvider theme={theme.isDark ? darkTheme : lightTheme}> */}\r\n        <Header />\r\n        {/* </ThemeProvider> */}\r\n      </ThemeProvider>\r\n    </>\r\n  );\r\n});\r\n\r\nexport default Wrapper;\r\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport clsx from \"clsx\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardHeader from \"@material-ui/core/CardHeader\";\r\nimport CardMedia from \"@material-ui/core/CardMedia\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport CardActions from \"@material-ui/core/CardActions\";\r\nimport Collapse from \"@material-ui/core/Collapse\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { red } from \"@material-ui/core/colors\";\r\nimport FavoriteIcon from \"@material-ui/icons/Favorite\";\r\nimport ShareIcon from \"@material-ui/icons/Share\";\r\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\r\nimport MoreVertIcon from \"@material-ui/icons/MoreVert\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    // maxWidth: 345,\r\n    border: \"2px solid black\"\r\n  },\r\n  media: {\r\n    height: 0,\r\n    paddingTop: \"56.25%\", // 16:9\r\n  },\r\n  expand: {\r\n    transform: \"rotate(0deg)\",\r\n    marginLeft: \"auto\",\r\n    transition: theme.transitions.create(\"transform\", {\r\n      duration: theme.transitions.duration.shortest,\r\n    }),\r\n  },\r\n  expandOpen: {\r\n    transform: \"rotate(180deg)\",\r\n  },\r\n  avatar: {\r\n    backgroundColor: red[500],\r\n  },\r\n}));\r\n\r\nexport default function RecipeReviewCard() {\r\n  const classes = useStyles();\r\n  const [expanded, setExpanded] = React.useState(false);\r\n\r\n  const handleExpandClick = () => {\r\n    setExpanded(!expanded);\r\n  };\r\n\r\n  return (\r\n    <Card className={classes.root}>\r\n      <CardHeader\r\n        avatar={\r\n          <Avatar aria-label=\"recipe\" className={classes.avatar}>\r\n            R\r\n          </Avatar>\r\n        }\r\n        action={\r\n          <IconButton aria-label=\"settings\">\r\n            <MoreVertIcon />\r\n          </IconButton>\r\n        }\r\n        title=\"Shrimp and Chorizo Paella\"\r\n        subheader=\"September 14, 2016\"\r\n      />\r\n      <CardMedia\r\n        className={classes.media}\r\n        image=\"/static/images/cards/paella.jpg\"\r\n        title=\"Paella dish\"\r\n      />\r\n      <CardContent>\r\n        <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n          This impressive paella is a perfect party dish and a fun meal to cook\r\n          together with your guests. Add 1 cup of frozen peas along with the\r\n          mussels, if you like.\r\n        </Typography>\r\n      </CardContent>\r\n      <CardActions disableSpacing>\r\n        <IconButton aria-label=\"add to favorites\">\r\n          <FavoriteIcon />\r\n        </IconButton>\r\n        <IconButton aria-label=\"share\">\r\n          <ShareIcon />\r\n        </IconButton>\r\n        <IconButton\r\n          className={clsx(classes.expand, {\r\n            [classes.expandOpen]: expanded,\r\n          })}\r\n          onClick={handleExpandClick}\r\n          aria-expanded={expanded}\r\n          aria-label=\"show more\"\r\n        >\r\n          <ExpandMoreIcon />\r\n        </IconButton>\r\n      </CardActions>\r\n      <Collapse in={expanded} timeout=\"auto\" unmountOnExit>\r\n        <CardContent>\r\n          <Typography paragraph>Method:</Typography>\r\n          <Typography paragraph>\r\n            Heat 1/2 cup of the broth in a pot until simmering, add saffron and\r\n            set aside for 10 minutes.\r\n          </Typography>\r\n          <Typography paragraph>\r\n            Heat oil in a (14- to 16-inch) paella pan or a large, deep skillet\r\n            over medium-high heat. Add chicken, shrimp and chorizo, and cook,\r\n            stirring occasionally until lightly browned, 6 to 8 minutes.\r\n            Transfer shrimp to a large plate and set aside, leaving chicken and\r\n            chorizo in the pan. Add pimentón, bay leaves, garlic, tomatoes,\r\n            onion, salt and pepper, and cook, stirring often until thickened and\r\n            fragrant, about 10 minutes. Add saffron broth and remaining 4 1/2\r\n            cups chicken broth; bring to a boil.\r\n          </Typography>\r\n          <Typography paragraph>\r\n            Add rice and stir very gently to distribute. Top with artichokes and\r\n            peppers, and cook without stirring, until most of the liquid is\r\n            absorbed, 15 to 18 minutes. Reduce heat to medium-low, add reserved\r\n            shrimp and mussels, tucking them down into the rice, and cook again\r\n            without stirring, until mussels have opened and rice is just tender,\r\n            5 to 7 minutes more. (Discard any mussels that don’t open.)\r\n          </Typography>\r\n          <Typography>\r\n            Set aside off of the heat to let rest for 10 minutes, and then\r\n            serve.\r\n          </Typography>\r\n        </CardContent>\r\n      </Collapse>\r\n    </Card>\r\n  );\r\n}\r\n","import { createMuiTheme } from \"@material-ui/core\";\r\n\r\nconst theme = createMuiTheme({\r\n  palette: {\r\n    primary: {\r\n      light: \"#fff\",\r\n      main: \"#F44336\",\r\n      dark: \"#bbb\",\r\n      contrastText: \"#fff\",\r\n    },\r\n    secondary: {\r\n      light: \"#ff7961\",\r\n      main: \"#f44336\",\r\n      dark: \"#ba000d\",\r\n      contrastText: \"#000\",\r\n    },\r\n  },\r\n});\r\n\r\nexport default theme;\r\n","import {\r\n  Button,\r\n  Grid,\r\n  InputLabel,\r\n  makeStyles,\r\n  TextField,\r\n  ThemeProvider,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport CardList from \"./CardList\";\r\nimport theme from \"./Theme\";\r\nconst useStyles = makeStyles((theme) => ({\r\n  form: {\r\n    maxwidth: 600,\r\n    border: \"2px solid black\",\r\n    margin: \"auto\",\r\n    height: 300,\r\n    width: 400,\r\n    padding: 20,\r\n  },\r\n  input: {\r\n    fontSize: \"40px\",\r\n  },\r\n  button: {\r\n    \"&:hover\": {\r\n      textDecoration: \"none\",\r\n      backgroundColor: theme.palette.secondary.dark,\r\n    },\r\n  },\r\n}));\r\nconst Form = () => {\r\n  const styles = useStyles();\r\n  console.log(theme);\r\n  return (\r\n    <>\r\n      <ThemeProvider theme={theme}>\r\n        <Grid container>\r\n          <Grid\r\n            className={styles.form}\r\n            item\r\n            direction=\"row\"\r\n            justify=\"center\"\r\n            alignItems=\"center\"\r\n          >\r\n            <TextField\r\n              fullWidth\r\n              inputProps={{ style: { fontSize: 40 } }}\r\n              label={<Typography component=\"h2\">Email</Typography>}\r\n            />\r\n            <TextField\r\n              fullWidth\r\n              inputProps={{ style: { fontSize: 40 } }}\r\n              label={<Typography component=\"h2\">name</Typography>}\r\n            />\r\n            <TextField\r\n              fullWidth\r\n              inputProps={{ style: { fontSize: 40 } }}\r\n              label={<Typography component=\"h2\">password</Typography>}\r\n            />\r\n            <Button\r\n              disableRipple={true}\r\n              className={styles.button}\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n            >\r\n              Primary\r\n            </Button>\r\n          </Grid>\r\n        </Grid>\r\n      </ThemeProvider>\r\n      {/* <CardList /> */}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Form;\r\n","import { createMuiTheme } from \"@material-ui/core\";\r\nimport { red } from \"@material-ui/core/colors\";\r\n\r\nconst theme = createMuiTheme({\r\n  palette: {\r\n    primary: {\r\n      main: \"#E74026\",\r\n    },\r\n    secondary: {\r\n      main: \"#EEA27E\",\r\n    },\r\n  },\r\n  props: {\r\n    MuiButton: {\r\n      disableRipple: true,\r\n      disableElevation: true,\r\n    },\r\n  },\r\n  // overrides: {\r\n  //   MuiButton: {\r\n  //     root: {\r\n  //       fontSize: \"40px\",\r\n  //       textTransform: \"none\",\r\n  //       \"&:hover\": {\r\n  //         //you want this to be the same as the backgroundColor above\r\n  //         boxShadow: \"none\",\r\n  //       },\r\n  //     },\r\n  //     fullWidth: {\r\n  //       maxWidth: \"300px\",\r\n  //     },\r\n  //   },\r\n  // },\r\n  // props: {\r\n  //   MuiButton: {\r\n  //     disableRipple: true,\r\n  //     disableElevation: true,\r\n  //   },\r\n  // },\r\n});\r\nexport default theme;\r\n","import { makeStyles } from \"@material-ui/core\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  headerItem: {\r\n    \"&:hover\": {\r\n      backgroundColor: \"transparent\",\r\n      color: \"yellow\",\r\n    },\r\n  },\r\n  flexCont: {\r\n    display: \"flex\",\r\n    justifyContent: \"space-between\",\r\n    maxWidth:\"1500px\",\r\n    margin:\"0 auto\"\r\n  },\r\n}));\r\n\r\nexport default useStyles;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport Counter from \"./burger/Counter\";\nimport Test from \"./Test/Test\";\nimport \"./index.css\";\nimport Mui from \"./mui/Mui\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport Header from \"./header/Header\";\nimport { createMuiTheme, ThemeProvider } from \"@material-ui/core\";\nimport theme from \"./Test/theme\";\nimport { darkTheme, lightTheme } from \"./header/theme\";\nimport Switches from \"./Test/Test\";\nimport { Observer } from \"mobx-react-lite\";\nimport Wrapper from \"./header/wrapper\";\nimport Test3 from \"./header/form/Test\";\nimport Checkboxes from \"./header/form/Checkboxes\";\nimport Checkout from \"./header/DocExample1\";\nimport Main from \"./Application/Main\";\nimport PaymentForm from \"./Demo/Form\";\nimport Forms from \"./header/form/Froms\";\nimport { customTheme } from \"./header/form/CustomButton\";\nimport Immer from \"./Immer/Immer\";\nimport HuD from \"./Immer/HD\";\nimport Styled from \"./Styled/Styled\";\nimport Cl from \"./cl\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      {/* <Styled /> */}\n      <Wrapper/>\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}